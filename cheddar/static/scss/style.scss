$gap : 4vh;
$padding : 4vh;
$color : #48CAE4;

$bp : (
  mobile : 480px,
  tablet : 768px,
  desktop : 1440px,
);

@mixin query($display){
  @each $key, $value in $bp{
    
    //  defining max-width
    @if ($display == $key){
      @media (max-width: $value){@content;}
    }
  }
}

*{
  margin:0px;
  padding: 0px;
  box-sizing: border-box;
  
  body{
    width: 100%;
    min-height: 100vh;
    font-family: sans-serif;
    font-size: 45px;
  }
}

.app {
	display: flex;
	height: 100%;
	flex-direction: column;
	background-color: blue;
	gap: $gap;
}

[class ^="block-"]{

//To lay the boxes in a row.
  display: flex;
  flex-direction: row;

//Removing border(1vh+1vh), gap, & padding from the height
// And then equally distributing spaces between the 
// .block-* classes by dividing it by 3

  height: (100vh-2vh -$gap*2-$padding*2) / 3;

// putting gap between .box-* classes
  gap: $gap;
  
// Style rules for mobile display

  @include query (mobile){
    flex-direction: column;
    
// you can pick any value you wish.
    height: 500px;
  }
  
}

